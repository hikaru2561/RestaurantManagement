@using System.Globalization
@model object
@{
    Layout = "_StaffLayout";
    ViewData["Title"] = "Đăng ký ca làm tuần sau";

    var weekStart = (DateTime)ViewBag.WeekStart;
    var weekEnd = (DateTime)ViewBag.WeekEnd;
    var shifts = ViewBag.Shifts as List<RestaurantManagement.Models.Shift>;
    var registered = ViewBag.Registered as List<RestaurantManagement.Models.Attendance>;
}

<h2>Đăng ký ca làm từ @weekStart.ToString("dd/MM") đến @weekEnd.ToString("dd/MM")</h2>

<form asp-action="Register" method="post">
    <input type="hidden" name="SelectedShiftsJson" id="SelectedShiftsJson" />

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Ca / Ngày</th>
                @for (var date = weekStart; date <= weekEnd; date = date.AddDays(1))
                {
                    <th>@date.ToString("ddd dd/MM")</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var shift in shifts)
            {
                <tr>
                    <td>
                        @shift.Name <br />
                        <small>@shift.StartTime.ToString("HH:mm") - @shift.EndTime.ToString("HH:mm")</small>
                    </td>
                    @for (var date = weekStart; date <= weekEnd; date = date.AddDays(1))
                    {
                        var record = registered.FirstOrDefault(r => r.ShiftId == shift.ShiftId && r.Date.Date == date.Date);
                        <td class="text-center">
                            @if (record == null)
                            {
                                <input type="checkbox"
                                       data-date="@date.ToString("yyyy-MM-dd")"
                                       data-shift="@shift.ShiftId" />
                            }
                            else
                            {
                                switch (record.Status)
                                {
                                    case RestaurantManagement.Models.AttendanceStatus.Registered:
                                        <span class="badge bg-secondary">Chờ duyệt</span>

                                        <br />
                                        <a asp-action="Cancel" asp-route-id="@record.AttendanceId" class="btn btn-sm btn-danger mt-1">Huỷ</a>
                                        break;
                                    case RestaurantManagement.Models.AttendanceStatus.Approved:
                                        <span class="badge bg-success">Đã duyệt</span>

                                        <br />
                                        <button type="button"
                                                class="btn btn-sm btn-outline-secondary mt-1"
                                                onclick="openRequestModal(@record.AttendanceId, '@shift.Name', '@date.ToString("dd/MM/yyyy")')">
                                            Gửi yêu cầu
                                        </button>
                                        break;
                                    case RestaurantManagement.Models.AttendanceStatus.Present:
                                        <span class="badge bg-success">Đã làm</span>
                                        break;
                                    case RestaurantManagement.Models.AttendanceStatus.Absent:
                                        <span class="badge bg-danger">Vắng</span>
                                        break;
                                }
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <button type="submit" class="btn btn-success">Đăng ký</button>
    <a asp-action="Index" class="btn btn-secondary">← Quay lại</a>
</form>

<!-- Modal Gửi yêu cầu -->
<div class="modal fade" id="requestModal" tabindex="-1" aria-labelledby="requestModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="requestModalLabel">Gửi yêu cầu thay đổi ca</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="attendanceId" />
                <div class="mb-2"><strong id="shiftInfo"></strong></div>
                <div class="form-floating">
                    <textarea id="requestContent" class="form-control" style="height: 120px" placeholder="Nội dung yêu cầu..."></textarea>
                    <label>Nội dung yêu cầu</label>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" onclick="sendRequest()">Gửi yêu cầu</button>
                <button class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.querySelector("form").addEventListener("submit", function (e) {
            const data = [];
            document.querySelectorAll("input[type=checkbox]:not([disabled])").forEach(cb => {
                if (cb.checked) {
                    data.push({
                        shiftId: cb.dataset.shift,
                        date: cb.dataset.date
                    });
                }
            });
            document.getElementById("SelectedShiftsJson").value = JSON.stringify(data);
        });

        function openRequestModal(attendanceId, shiftName, dateStr) {
            document.getElementById('attendanceId').value = attendanceId;
            document.getElementById('shiftInfo').innerText = `${shiftName} - ${dateStr}`;
            document.getElementById('requestContent').value = "";
            var modal = new bootstrap.Modal(document.getElementById('requestModal'));
            modal.show();
        }

        function sendRequest() {
            const id = document.getElementById('attendanceId').value;
            const content = document.getElementById('requestContent').value;

            fetch('/Staff/Schedule/SendRequest', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ attendanceId: id, content: content })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    alert("Đã gửi yêu cầu thành công!");
                    location.reload();
                } else {
                    alert("Gửi yêu cầu thất bại!");
                }
            });
        }
    </script>
}
