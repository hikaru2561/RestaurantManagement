@model RestaurantManagement.Models.Order
@{
    ViewData["Title"] = "Tạo đơn hàng";
    Layout = "_StaffLayout";
    var menuItems = ViewBag.MenuItems as List<MenuItem>;
    var customers = ViewBag.Customers as List<Customer>;
    var tables = ViewBag.DingningTables as List<DingningTable>;
}

<h2>Tạo đơn hàng mới</h2>

<form asp-action="Add" method="post">
    <div class="row mb-4">
        <div class="col-md-4">
            <label class="form-label">Bàn ăn</label>
            <select asp-for="DingningTableId" class="form-select" required>
                <option disabled selected>-- Chọn bàn còn trống --</option>
                @foreach (var table in tables)
                {
                    <option value="@table.DingningTableId">@table.Name - @table.Capacity người</option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <label class="form-label">Khách hàng (nếu có)</label>
            <select asp-for="CustomerId" class="form-select">
                <option value="">-- Không chọn --</option>
                @foreach (var c in customers)
                {
                    <option value="@c.CustomerId">@c.Name</option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <label class="form-label">Thời gian</label>
            <input asp-for="OrderTime" class="form-control" readonly />
        </div>
    </div>

    <h5 class="mt-4">🧾 Chọn món ăn</h5>

    <input type="text" class="form-control mb-3" placeholder="🔍 Tìm món ăn..." id="searchInput" />

    <div class="row" id="menuItemsContainer">
        @foreach (var item in menuItems.Where(m => m.Status))
        {
            <div class="col-md-4 mb-3 menu-item-card" data-name="@item.Name.ToLower()">
                <div class="card h-100 shadow-sm">
                    <img src="~/images/MenuItem/@item.ImagePath?v" class="card-img-top" style="height: 120px; object-fit: cover;" />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@item.Name</h5>
                        <p class="card-text">@item.Price.ToString("N0") đ</p>

                        <div class="d-flex align-items-center mt-auto">
                            <input type="number" class="form-control form-control-sm me-2 quantity-input" placeholder="SL" min="1" value="1" />
                            <button type="button" class="btn btn-success btn-sm add-to-order" data-id="@item.MenuItemId" data-name="@item.Name">
                                <i class="bi bi-plus-circle"></i> Thêm
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <h5 class="mt-4">🛒 Món đã chọn</h5>
    <table class="table table-bordered" id="orderItemsTable">
        <thead class="table-light">
            <tr>
                <th>Món ăn</th>
                <th>Số lượng</th>
                <th></th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <!-- Hidden inputs sẽ tự động thêm vào khi chọn món -->
    <div id="hiddenItems"></div>

    <div class="text-end">
        <button type="submit" class="btn btn-primary">Tạo đơn hàng</button>
        <a asp-action="Index" class="btn btn-secondary">Huỷ</a>
    </div>
</form>

@section Scripts {
    <script>
        // Lọc món ăn theo tên
        document.getElementById('searchInput').addEventListener('input', function () {
            const keyword = this.value.toLowerCase();
            document.querySelectorAll('.menu-item-card').forEach(card => {
                const name = card.getAttribute('data-name');
                card.style.display = name.includes(keyword) ? 'block' : 'none';
            });
        });

        // Xử lý thêm món
        const orderItemsTable = document.querySelector("#orderItemsTable tbody");
        const hiddenItemsDiv = document.getElementById("hiddenItems");

        document.querySelectorAll(".add-to-order").forEach(btn => {
            btn.addEventListener("click", function () {
                const id = this.dataset.id;
                const name = this.dataset.name;
                const quantityInput = this.closest(".card-body").querySelector(".quantity-input");
                const quantity = parseInt(quantityInput.value);

                if (quantity <= 0 || isNaN(quantity)) return;

                // Nếu đã có thì cập nhật
                const existingRow = orderItemsTable.querySelector(`tr[data-id="${id}"]`);
                if (existingRow) {
                    const qtyCell = existingRow.querySelector(".qty");
                    const newQty = parseInt(qtyCell.innerText) + quantity;
                    qtyCell.innerText = newQty;

                    const hiddenQty = hiddenItemsDiv.querySelector(`input[name="Quantities"][data-id="${id}"]`);
                    hiddenQty.value = newQty;
                } else {
                    // Thêm mới
                    orderItemsTable.innerHTML += `
                        <tr data-id="${id}">
                            <td>${name}</td>
                            <td class="qty">${quantity}</td>
                            <td><button type="button" class="btn btn-danger btn-sm remove-item">Xoá</button></td>
                        </tr>
                    `;

                    hiddenItemsDiv.innerHTML += `
                        <input type="hidden" name="MenuItemIds" value="${id}" />
                        <input type="hidden" name="Quantities" value="${quantity}" data-id="${id}" />
                    `;
                }
            });
        });

        // Xoá món
        orderItemsTable.addEventListener("click", function (e) {
            if (e.target.classList.contains("remove-item")) {
                const row = e.target.closest("tr");
                const id = row.dataset.id;
                row.remove();

                hiddenItemsDiv.querySelectorAll(`input[data-id="${id}"]`).forEach(el => el.remove());
            }
        });
    </script>
}
