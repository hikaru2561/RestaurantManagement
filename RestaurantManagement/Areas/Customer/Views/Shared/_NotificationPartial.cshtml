@using RestaurantManagement.Data
@inject ApplicationDbContext _context
@using System.Security.Claims

@{
    var username = User.Identity?.Name;
    var role = User.FindFirst(ClaimTypes.Role)?.Value;

    var notifications = _context.Notifications
        .Where(n => n.RecipientUsername == username && n.Role == role)
        .OrderByDescending(n => n.CreatedAt)
        .Take(10)
        .ToList();

    var unreadCount = notifications.Count(n => !n.IsRead);
}

<div class="dropdown me-3">
    <button class="btn btn-light position-relative" data-bs-toggle="dropdown">
        <i class="bi bi-bell-fill fs-5"></i>
        @if (unreadCount > 0)
        {
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                @unreadCount
            </span>
        }
    </button>
    <ul class="dropdown-menu dropdown-menu-end shadow" style="min-width: 300px; max-height: 400px; overflow-y: auto;">
        <li class="dropdown-header fw-bold text-dark">Thông báo</li>
        <hr class="my-1" />
        @if (!notifications.Any())
        {
            <li class="px-3 text-muted">Không có thông báo nào.</li>
        }
        else
        {
            foreach (var n in notifications)
            {
                <li class="dropdown-item @(n.IsRead ? "" : "fw-bold")">
                    <div>@n.Title</div>
                    <small class="text-muted">@n.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                </li>
            }
        }
    </ul>
</div>
